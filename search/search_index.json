{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, Note 1 in <code>Topic 1</code></p>"},{"location":"Features/LaTeX%20Math%20Support/","title":"LaTeX Math Support","text":"<p>LaTeX math is supported using MathJax.</p> <p>Inline math looks like \\(f(x) = x^2\\). The input for this is <code>$f(x) = x^2$</code>. Use <code>$...$</code>.</p> <p>For a block of math, use <code>$$...$$</code> on separate lines</p> <pre><code>$$\nF(x) = \\int^a_b \\frac{1}{2}x^4\n$$\n</code></pre> <p>gives </p> \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\]"},{"location":"Features/Mermaid%20Diagrams/","title":"Mermaid diagrams","text":"<p>Here's the example from MkDocs Material documentation: </p> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n</code></pre>"},{"location":"Features/Text%20Formatting/","title":"Text Formatting","text":"<p>You can have lists like this</p> <ul> <li>first</li> <li>second</li> <li>third</li> </ul> <p>Or checklist lists to</p> <ul> <li> Get</li> <li> things</li> <li> done</li> </ul> <p>Also, get highlights and strikethroughs as above (similar to Obsidian).</p> <p>More formatting options for your webpage here. (but not compatible with Obsidian)</p>"},{"location":"Game%20Dev/0_Resources/Game%20Visual%20Design/","title":"Game Visual Design","text":"<ul> <li>Game UI Database</li> <li>Game Interface Collection</li> <li>Game Pixel Art Info</li> <li>Color Selections for Data Visualization</li> <li></li> </ul>"},{"location":"Game%20Dev/0_Resources/General/","title":"General","text":"<ul> <li>Balance EXP Gains</li> <li>Cookie Clicker Building Price Calculation</li> <li>Develop RPG Damage Formulas</li> <li>Design a Soccer Engine</li> <li>Code for Rogule</li> <li>Games written in Elm</li> <li></li> </ul>"},{"location":"Game%20Dev/0_Resources/Probability/","title":"Probability","text":"<ul> <li>Any Dice</li> <li>Probability, Decisions, and Games</li> <li>Conditional Probability</li> <li>Chance, Probability, Luck, Calculations</li> <li>Probability Problems in Game Design</li> <li>Probability and Damage Rolls</li> <li></li> </ul>"},{"location":"Game%20Dev/0_Resources/Unity/","title":"Unity","text":"<ul> <li>Unity Scripting API Reference</li> <li>Learn Unity</li> <li>Camera Render Mode Discussion</li> <li>Events and Delegates</li> <li>Singletons</li> </ul>"},{"location":"Game%20Dev/Notes%20While%20Developing/Bomberman/","title":"Bomberman","text":"<ul> <li>Assets are pixel art using LibreSprite.  Objects looked pixelated.  This was fixed by setting filter mode on assets to Point(no filter) instead of Bilinear</li> <li>To add some visual space between tiles, I set the PPU of my spritesheet to 17 instead of the 16 pixel size they were drawn in</li> <li>Want player to be able to pass through their own bombs without letting enemies pass through. I achieved this by setting the layer for the Player object to Player and the layer for the player bombs to PlayerBomb.  Then in Edit -&gt; Project Settings -&gt; Physics 2D, I updated the Layer Collision Matrix so that the Player and PlayerBomb layers will not collider with each other.</li> <li>Bomb animation.<ul> <li>Add Animator component to bomb object </li> <li>Create new folder in project called Animations and add a new Animation Controller to it</li> <li>Connect animation controller to bomb object</li> <li>Add the animator and animation windows to screen</li> <li>Add a new animation for Idle so that entry has a state to enter by default and then add the countdown state.</li> <li>Drag both these animations into the animation controller</li> <li>In the countdown animation, use the hugebomb as example object to preview</li> <li>I added SpriteRenderer.color and Transform.scale as two properties to change using the record function and updating values in keyframes</li> <li>I added a function in the Bomb script called ExplodeBomb</li> <li>I added an animation event to the countdown animation and used the function ExplodeBomb, then I dragged the animation event to right at the end of the animation.</li> </ul> </li> <li>Determined which spots are going to be hit by a bomb going off by looping through the four directions up to a max distance and using a raycast at each point to check 1 unit away in that distance<ul> <li><code>Vector2[] directions = { Vector2.up, Vector2.right, Vector2.down, Vector2.left };</code></li> <li><code>RaycastHit2D blockHit = Physics2D.Raycast(currentPoint, direction, 1f, blockingMask);</code></li> <li><code>if (blockHit.collider == null)</code></li> </ul> </li> <li>To create a reusable \"animation\" for the different explosions (and eventually crate breaking too), I created a SpriteFlipbook script.  It takes in a list of sprites, the time between switching sprites, and a flag for if it should go in reverse after hitting the end.  A timer is used to determine when it's time to switch again.</li> </ul>"},{"location":"Game%20Dev/Unity/Unity%20Example%20GitIgnore/","title":"Example .gitignore","text":"<p>The following is a a standard .gitignore for a Unity project.</p> <pre><code>\n# This .gitignore file should be placed at the root of your Unity project directory\n\n# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore\n\n\n/[Ll]ibrary/\n/[Tt]emp/\n/[Oo]bj/\n/[Bb]uild/\n/[Bb]uilds/\n/[Ll]ogs/\n/[Uu]ser[Ss]ettings/\n\n# MemoryCaptures can get excessive in size.\n# They also could contain extremely sensitive data\n/[Mm]emoryCaptures/\n\n# Recordings can get excessive in size\n/[Rr]ecordings/\n\n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n\n# Autogenerated Jetbrains Rider plugin\n/[Aa]ssets/Plugins/Editor/JetBrains*\n\n\n# Visual Studio cache directory\n.vs/\n\n\n# Gradle cache directory\n.gradle/\n\n\n# Autogenerated VS/MD/Consulo solution and project files\n\nExportedObj/\n\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n\n\n\n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n\n# Unity3D generated file on crash reports\nsysinfo.txt\n\n\n\n# Builds\n*.apk\n*.aab\n*.unitypackage\n*.app\n\n# Crashlytics generated file\ncrashlytics-build.properties\n\n# Packed Addressables\n/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*\n\n\n# Temporary auto-generated Android Assets\n/[Aa]ssets/[Ss]treamingAssets/aa.meta\n/[Aa]ssets/[Ss]treamingAssets/aa/*\n\n</code></pre>"},{"location":"Home%20Buying/Process/","title":"Process","text":"<ol> <li>Research Mortgage Lenders</li> <li>Research Real-Estate Agents</li> <li>Get documents prepared for loan pre-approval process</li> <li>Find real-estate agent</li> <li>Get pre-approved for loan</li> <li>Work with agent to find homes/make offers</li> <li>When chosen as buyer:<ol> <li>Get inspection(s)</li> <li>Get mortgage loan</li> <li>...</li> </ol> </li> <li>On day things close, pick up keys, get locks changed, set garage code, etc</li> <li>Order furniture</li> <li>Move in</li> <li>Get internet hookup</li> </ol>"},{"location":"Study%20Notes/UDEMY%20-%20Complete%20How%20To%20Draw%20Anime%20and%20Manga%20Course/","title":"UDEMY   Complete How To Draw Anime and Manga Course","text":""},{"location":"Study%20Notes/UDEMY%20-%20Complete%20How%20To%20Draw%20Anime%20and%20Manga%20Course/#manga-style-elements","title":"Manga Style Elements","text":"<ul> <li>Comparing 3/4 view for looking at head shape<ul> <li>More straight/flat eye socket indention than realistic for far side of face</li> <li>flatter nose </li> <li>lower cheek/jaw area</li> <li>These differences are really there to stylize the head/face which are the most expressive and emphasized part of Manga drawings. Goal is more symbolic and simple shapes and proportions to make expressions readable and clear.</li> </ul> </li> <li>Head Shape Styles<ul> <li>Feminine: Curvier cheek into chin + point chin</li> <li>Younger male: Curvier cheek into chin + a bit more structure/definition to chin</li> <li>Masculine: A more angled and abrupt transition from cheek to chin, flatter chin line</li> <li>Older Masculine: Same as masculine but an even longer flat chin line</li> <li>Smaller/younger/thinner/feminine characters: thinner neck</li> <li>Bigger/older/thicker/masculine characters: thicker neck</li> </ul> </li> </ul>"},{"location":"Study%20Notes/UDEMY%20-%20Complete%20How%20To%20Draw%20Anime%20and%20Manga%20Course/#fundamentals-of-eyes","title":"Fundamentals of Eyes","text":"<ul> <li>Want to start with upper lid line.  This is typically darker than other lines in the eye. Want to make it a bit thicker and maybe good to go over it with multiple lines<ul> <li>Can add some angled, but more horizontal lines coming off of this as some stylized eyelash</li> <li>Less emphasis on lashes for male characters</li> </ul> </li> <li>Next, add the outer corner line something maybe thick at top and thin at bottom</li> <li>Next is eyelid crease on, a short line appearing on the inside of the eye tat goes at an angle to slightly above the upper lid line</li> <li>Next is iris shape, maybe thicken the lines of origin coming from the upper lid line which can represent idea of upper lid shadow</li> <li>Lower lid line is often either left out or just a short line along the bottom of the iris </li> <li>Inner corner line usually left off, and instead we just transition from eyelid white to skin color</li> <li>Next is pupil, can go ahead and add some shading here with something like cross hatching</li> <li>Can shade in iris now, typically lighter than iris shading</li> <li>Shade upper lid by marking a space and shading it in</li> <li>Add a highlight which could be iris only, pupil only, iris and pupil, eye white and pupil and could be any shape</li> <li>Variations on any of all of these guidelines can be used to create unique style and characters</li> </ul>"},{"location":"Study%20Notes/UDEMY%20-%20Krita/","title":"UDEMY   Krita","text":"<p>circle and rectangle tool - Shift will make it perfect circle or perfect square - ctrl will make the pivot point the starting mouse location rather than the top corner of shape - alt will let you drag shape around while creating</p> <p>ambient light: type of environment lighting where lights are coming from all directions uniformly     (ex: sun)</p> <p>back light: special light source placed on dark areas to help communicate object's shape     or silhouette or to convey certain mood     (ex: campfire near tree)</p> <p>rimlight: special light sources places on edges of object's silhouette to help     depict its shape or gain viewers attention     using excessively will make illustration look fake</p> <p>reference images rough sketch + corrections -&gt; blue final sketch + corrections -&gt; black</p> <p>layer sorting  - main groups (background, middle ground, foreground)  - sub groups, ex middle ground -&gt;      cliff/grass/tree(everything)          or cliff/tree and grass(keep touching color layers seperate)</p> <p>base colors: try to avoid colors too close to black, white, or fully saturated      (i,e pick more near center of color square)</p> <p>local shading: small detailed shadows inside the drawing (ambient occlusion),      subtle shadows exist in crevasses, corners, holes, etc     essential on areas occluded from ambient lighting     call it local shading because adding small sized shadows and AO is just one kind     local shading layer -&gt;          - turn on alpha inheritance so it wont go outside of base color layer         - switch layer blending mode to multiply(since its for shadow color)         - use outline tool to select an area to add shadow to         - use airbrush tool with around 50% opacity         - use black or a darker shade of color         - contact with other layer like tree contacting grass should be darker         - use smear brush to soften out the shadow</p> <p>global shading:      - large sized shadows     - casted shadows(shadows emitted from objects that fall onto other objects or areas)     - turn on alpha inheritance and switch blending mode to multiply     - use airbrush tool     - ex: top of tree branches/trunk getting shadow from leaves in canopy      - ex: tree with light coming from top right would have left side darker     - ex: grass around tree opposite of main light     - select areas to darken, use airbrush with 50% opacity and darken</p> <p>highlights:      - create highlight layer, turn on alpha inheritance, switch blending mode to screen     - select area, use air brush, select color, go to brighter color, switch opacity to like 50%     - smooth out color</p> <p>details:      - create layer on top of base layer and below local shading     - turn on alpha inheritance     - select color to use     - use selection and brush tool or use special brushes     - color variation, select area, use air brush tool and different color, use smear tool to blend</p> <p>recoloring and creating variation:     - example creating a winter version of tree     - alpha lock your base layer     - shift + bksp to fill alpha locked layer or brush over area     - whitish for winter, less saturated for winter trunk, etc     - backlight, top layer, alpha inheritance on, blending mode as screen</p> <p>layer order group:    - backlight/rimlight   - highlight   - global shading   - custom detail(opt, like snow covering wood cracks)   - local shading   - details   - base</p> <p>Modifying Selection - hold shift and drag and you will add to selection instead of replacing it</p> <ul> <li> <p>hold alt and drag and you will subtract from the selection</p> </li> <li> <p>hold shift and alt and drag and you get the intersection      of the two selections which is the area that contains both selections</p> </li> <li> <p>to combine with perfect proportion shortcut, hold shift and drag to create selection,     then let go of shift and press shift again and as you drag you will be in proportion</p> </li> <li> <p>in tool option docker, there are also action options which are buttons that will do what the above    keyboard shortcuts do</p> </li> <li> <p>invert selection with ctrl+shift+i or from selection menu -&gt; invert selection</p> </li> <li> <p>to grow a selection, you can go to selection menu and press grow selection and use that menu</p> </li> <li> <p>same with shrink</p> </li> <li> <p>feathering = a process of adding soft opactiy transition at the edges of the selection region</p> </li> <li> <p>border selection = convert the current selection into a      path selection surrounding the border of your intitial selection     (choose border size and then selection gives that much border and you can draw or fill that border area)</p> </li> <li> <p>stroke selection command = draw a border color and or add fill color on the canvas based on      the active selection region.  This command will not create a new selection  </p> <ul> <li>line = border color</li> <li>width = border width</li> <li>fill = color to fill inner selection with(can choose none)</li> </ul> </li> <li> <p>selection transformation methods:</p> </li> <li>Simple movement</li> <li>Edit selection</li> <li> <p>Vector editing</p> </li> <li> <p>Simple movement, move cursor over the border of the selection and you will see it      change to a different cursor that moves the selection without moving inner image</p> </li> </ul> <p>Global selection mask = a temporary mask that will show up whenever we have a selection.       It stores the selection information and can be used for a lot of different purposes</p> <ul> <li>Edit selection mode: Selection menu -&gt; edit selection or Right click and press edit selection     Will open global selection mask and surround your selection with a transform box         where you can scale, rotate, skew, flip, etc</li> </ul> <p>3 methods of creating selection based on color information   1. Contiguous selection tool   2. Similar color selection tool   3. Select from color range command</p> <ol> <li>Contiguous selection tool is the magic want to the right of the selection tools</li> <li>go to tool options and set fuizziness to a low value, and set grow/shrink and feathering to 0</li> <li>fuzziness is how much color range krita will consider to be similar for neighboring pixels</li> </ol> <p>Layer encapsulation = no matter how complex the compoosition inside a group layer, from outside,      the group layer is considered as a single layer</p> <ol> <li>Similar color selection which is the xy line with diagnoal magic want</li> <li> <p>Selects area you click and any other area with similar color on layer</p> </li> <li> <p>Select from color range command you can select from select menu</p> </li> <li>Choose from small selection of color types or brightness layers and selects everything similar</li> </ol> <p>Anti-aliasing = a process of adding semi transparent pixels at the broder of images to give it more    smoother looks and to avoid pixel jaggies. Pretty obvious on rounded lines and turning it off gives jagged    and pixelated looks.</p> <p>Free transform tool:   - if no selection, it will outline the whole layer and let you move around the content  - if you have a selection, the transform tool will move just the selection  - press enter to apply changes or escape to cancel  - has 5 modes.  Free transform is default  - Free transform:      - Can drag using center of selection     - can rotate using the corners just outside of node     - Can scale using square nodes     - Edges can be used to skew or sheer     - Can hold shift while rotating to rotate in 7.5 degree increments     - Can hold control and move around to apply 3D transformation      - Tool options contains options to change pivot point, mirror image, etc</p> <ul> <li>Perspective Transform: <ul> <li>Distort selection using handles</li> <li>Can use vanishing point handle to change vanishing point</li> </ul> </li> <li>Warp Mode:<ul> <li>Adds control points to the image that you can move around to distort selection</li> <li>Can use grid control points or custom layout of control points</li> <li>Spikey</li> </ul> </li> <li>Cage Mode:<ul> <li>A lot like warp mode.  </li> <li>Smoother and Rounder</li> </ul> </li> <li>Liquify Distortion: <ul> <li>Uses brush like tools instead of anchor points to distort images</li> </ul> </li> </ul> <p>Mask: Additional information that can be applied to a parent layer</p> <p>Transform mask: allows us to do non-destructive transformations.  - mask requires a parent layer  - if you duplicate a mask layer, it will create a layer with the transforms performed again   - can copy transform mask to a different layer and the transform will be performed on that layer as well</p> <p>Transparency Mask: Mask that holds transparency information:   - Black = transparent and White = Opaque   - Example you could choose a brush and select black and it would make image appear to be erased   - You could then switch to white and then draw and it would look like the image is coming back   - Could be a cool effect to do </p> <p>Gradient: Transition of colors   - Krita has three types of gradient colors: Special, Stopp, and Segmented   - Special Gradients: Used dynamic colors, ie foreground to transparent the color changes           based on foreground color selection   - Stop Gradients: Has triangles in color gradient where each stop has color           and opacity which is used to create whole gradient   - Segmented Gradients: Has three nodes, the two black ones are color nodes.          - White node controls the center point of the transition         - Linear transforms from left to right without any easing function         - Can transition using rgb(each rgb value updates), or               HSV which moves along the color wheel either clockwise or counter clockwise         - Can flip the gradient strip by right clicking and pressing 'mirror segment'         - Can duplicate which turns the strip into two segments each using the same UI as the previous            only you have to click on a segment to make that one active for changes          - Can split the segment which will happpen at the location of the white node</p> <p>Gradient Tool:    - Shaped will apply gradient based on shape of selection   - Can use shift key after starting to drag to create perfectly straight gradient direction</p> <p>Wrap around mode / Tileable image:    - Tileable images are used in many design related disciplines:   - web designers user for backgrounds, 3D artists use for texturing 3D models,       graphic designers use them for patterns   - Tileable pattern: Cover large area with small image by repeating it (really awesome)     - Create small image and create a curve from left to right that wouldn't line up     - Turn on wrap around mode and it will create tiles of your image where you can  then draw on one and         it will be reflected in each tile which would let you connect them and kind of create infinite repeating        patterns for an image   - tileable texture (seamless texture): Created from photograph      - textures.com      - Seams erasing: Turn on wrap around mode, you will notice seams           - view -&gt; show grid to see original image location          - duplicate layer          - move second layer so it's seams are center of the grid          - erase seams using eraser or transparency mask      - Clone brush tool         - Select area and press control to move clone tool which is where duplicated images will be drawn      - Manual patching: Select areas, copy selection to new layer, move new layer over seam</p> <p>Filter: Applying some graphical operation to alter an image   - </p>"},{"location":"Study%20Notes/UDEMY%20-%20Unity%20Card%20Battler/","title":"UDEMY   Unity Card Battler","text":"<ul> <li>When doing some of the UI placement on a card, changed camera from perspective to isometric</li> <li> <p>mentioned some reasoning, but reminder to look into this more for later to      understand why</p> </li> <li> <p>Wanted to have background image for image section of card</p> </li> <li>turned on perserve aspect ratio, but image wasn't perfect size for card</li> <li>Added another UI-&gt;Image, turned of maskable, added component 'Mask', and      sized the rect so it covered the image area</li> <li>Next moved background image to be a child of the mask</li> <li> <p>This let's us resize the image so it covers the mask area without going out of the bounds we want</p> </li> <li> <p>Set z rotation on cards so if you have a lot of cards in hand, they don't overlap and look bad</p> </li> <li> <p>Can hold control when moving something in scene view to move in increments</p> </li> <li> <p>Can pause before pressing play so that you can unpause after scene has finished compiling   which allows you to see stuff without the stutter that compiling can cause</p> </li> <li> <p>Added each song/sound effect as an audio source in the scene </p> </li> <li>can add a window-&gt;audio-&gt;audio mixer and have groups for master/soudtrack/sfx/etc where     you can set overall volume for each group and control them that way</li> <li>Will look more into using this on my own</li> <li> <p>I've done have one audio source with a list of audio clips</p> <ul> <li>maybe do some research on difference and pros/cons</li> </ul> </li> <li> <p>Used an object with a custom audio manager script on it to play songs by taking in   a reference to different audio sources</p> </li> <li> <p>Made this into a singleton and used DontDestroyOnLoad so that the audio manager would persist   across different scene transitions</p> </li> <li> <p>To not have to have this large audio manager object with each song need to be packaged in each scene    and loaded each time, we have a audiomanagerloader script we created which checks if    audio manager doesn't exist in scene and if so, instantiates the audio manager that we added as    as reference from the scene we did create the audio manager in    This allows us to still have an audio manager even if the main scene isn't the first one loaded</p> </li> </ul>"},{"location":"To%20Research/Game%20Dev/","title":"Game Dev","text":"<ul> <li>How to prevent memory leaks and other issues that may arise if game is left running for very long periods of time.  Read a blurb about games needing to be able to do this for certification.</li> <li>Making sure no music/names/locations/art/etc is breaching copyright/trademark </li> <li></li> </ul>"},{"location":"Topic%201/Note%201/","title":"Note 1","text":"<p>Example: link to Mermaid Diagrams under <code>Features</code></p>"},{"location":"Topic%201/Note%202/","title":"Note 2","text":""}]}